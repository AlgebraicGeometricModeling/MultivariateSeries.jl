var documenterSearchIndex = {"docs":
[{"location":"code/3.decompose/#Decomposition","page":"Decomposition","title":"Decomposition","text":"","category":"section"},{"location":"code/3.decompose/","page":"Decomposition","title":"Decomposition","text":"Pages = [\"3.decompose.md\"]","category":"page"},{"location":"code/3.decompose/","page":"Decomposition","title":"Decomposition","text":"decompose ","category":"page"},{"location":"code/3.decompose/#MultivariateSeries.decompose","page":"Decomposition","title":"MultivariateSeries.decompose","text":"decompose(σ :: Series{C,M}, rkf :: Function)\n\nDecompose the series σ as a weighted sum of exponentials. Return ω, Ξ where\n\nω is the vector of weights,\nΞ is the matrix of frequency points, stored per row.\n\nThe list of monomials of degree leq d-1 over 2 are used to construct the Hankel matrix, where d is the maximal degree of the moments in σ.\n\nThe optional argument rkf is the rank function used to determine the numerical rank from the vector S of singular values. Its default value eps_rkf(1.e-6) determines the rank as the first i s.t. S[i+1]/S[i]< 1.e-6 where S is the vector of singular values.\n\nIf the rank function cst_rkf(r) is used, the SVD is truncated at rank r.\n\n\n\n\n\n","category":"function"},{"location":"expl/6.Decoding/#Decoding-algebraic-codes-(BMS)","page":"Decoding algebraic codes (BMS)","title":"Decoding algebraic codes (BMS)","text":"","category":"section"},{"location":"expl/6.Decoding/","page":"Decoding algebraic codes (BMS)","title":"Decoding algebraic codes (BMS)","text":"We consider the code C formed by the words min mathbbk^l such that  $ m.[f(P1), \\ldots, f(Pl)]=0 $  where fin Vsubset mathbbkx_1x_n.","category":"page"},{"location":"expl/6.Decoding/","page":"Decoding algebraic codes (BMS)","title":"Decoding algebraic codes (BMS)","text":"using MultivariateSeries\nX = @ring x1 x2","category":"page"},{"location":"expl/6.Decoding/","page":"Decoding algebraic codes (BMS)","title":"Decoding algebraic codes (BMS)","text":"2-element Array{DynamicPolynomials.PolyVar{true},1}:\n x1\n x2","category":"page"},{"location":"expl/6.Decoding/","page":"Decoding algebraic codes (BMS)","title":"Decoding algebraic codes (BMS)","text":"We consider the following points P and the vector space V spanned by the monomials M of degree le 2 in two variables x_1 x_2.","category":"page"},{"location":"expl/6.Decoding/","page":"Decoding algebraic codes (BMS)","title":"Decoding algebraic codes (BMS)","text":"P = [\n1   1;\n1  -1;\n-1  1;\n-1 -1;\n0   1; \n2  -1;\n1   2;\n1  -2]'\n\nM = monoms(X,2)","category":"page"},{"location":"expl/6.Decoding/","page":"Decoding algebraic codes (BMS)","title":"Decoding algebraic codes (BMS)","text":"6-element Array{DynamicPolynomials.Monomial{true},1}:\n 1   \n x1  \n x2  \n x1² \n x1x2\n x2²","category":"page"},{"location":"expl/6.Decoding/","page":"Decoding algebraic codes (BMS)","title":"Decoding algebraic codes (BMS)","text":"The words of the code are the kernel of the following matrix:","category":"page"},{"location":"expl/6.Decoding/","page":"Decoding algebraic codes (BMS)","title":"Decoding algebraic codes (BMS)","text":"using DynamicPolynomials\nfunction vdm(P,L)\n    [ Polynomial{true,Float64}(L[j])(P[:,i])\n        for  j in 1:length(L),i in 1:size(P,2) ]\nend\nW = vdm(P,M)","category":"page"},{"location":"expl/6.Decoding/","page":"Decoding algebraic codes (BMS)","title":"Decoding algebraic codes (BMS)","text":"6×8 Array{Float64,2}:\n 1.0   1.0   1.0   1.0  1.0   1.0  1.0   1.0\n 1.0   1.0  -1.0  -1.0  0.0   2.0  1.0   1.0\n 1.0  -1.0   1.0  -1.0  1.0  -1.0  2.0  -2.0\n 1.0   1.0   1.0   1.0  0.0   4.0  1.0   1.0\n 1.0  -1.0  -1.0   1.0  0.0  -2.0  2.0  -2.0\n 1.0   1.0   1.0   1.0  1.0   1.0  4.0   4.0","category":"page"},{"location":"expl/6.Decoding/","page":"Decoding algebraic codes (BMS)","title":"Decoding algebraic codes (BMS)","text":"We receive the following word:","category":"page"},{"location":"expl/6.Decoding/","page":"Decoding algebraic codes (BMS)","title":"Decoding algebraic codes (BMS)","text":"r = [3, 3, 3, 0, -6, -2, 0, -1]","category":"page"},{"location":"expl/6.Decoding/","page":"Decoding algebraic codes (BMS)","title":"Decoding algebraic codes (BMS)","text":"8-element Array{Int64,1}:\n  3\n  3\n  3\n  0\n -6\n -2\n  0\n -1","category":"page"},{"location":"expl/6.Decoding/","page":"Decoding algebraic codes (BMS)","title":"Decoding algebraic codes (BMS)","text":"It is not a word of code C, since the following vector of syndroms is not zero:","category":"page"},{"location":"expl/6.Decoding/","page":"Decoding algebraic codes (BMS)","title":"Decoding algebraic codes (BMS)","text":"s = W*r","category":"page"},{"location":"expl/6.Decoding/","page":"Decoding algebraic codes (BMS)","title":"Decoding algebraic codes (BMS)","text":"6-element Array{Float64,1}:\n  0.0\n -2.0\n  1.0\n  0.0\n  3.0\n -3.0","category":"page"},{"location":"expl/6.Decoding/","page":"Decoding algebraic codes (BMS)","title":"Decoding algebraic codes (BMS)","text":"We want to correct it. For that, we build the corresponding series of syndroms:","category":"page"},{"location":"expl/6.Decoding/","page":"Decoding algebraic codes (BMS)","title":"Decoding algebraic codes (BMS)","text":"sigma = dual(M'*s)","category":"page"},{"location":"expl/6.Decoding/","page":"Decoding algebraic codes (BMS)","title":"Decoding algebraic codes (BMS)","text":"3.0dx1*dx2 - 3.0dx2^2 + dx2 - 2.0dx1","category":"page"},{"location":"expl/6.Decoding/","page":"Decoding algebraic codes (BMS)","title":"Decoding algebraic codes (BMS)","text":"The Hankel matrix of sigma in degree le 1 is:","category":"page"},{"location":"expl/6.Decoding/","page":"Decoding algebraic codes (BMS)","title":"Decoding algebraic codes (BMS)","text":"L1 = monoms(X,1)\nH = hankel(sigma, L1, L1)","category":"page"},{"location":"expl/6.Decoding/","page":"Decoding algebraic codes (BMS)","title":"Decoding algebraic codes (BMS)","text":"3×3 Array{Float64,2}:\n  0.0  -2.0   1.0\n -2.0   0.0   3.0\n  1.0   3.0  -3.0","category":"page"},{"location":"expl/6.Decoding/","page":"Decoding algebraic codes (BMS)","title":"Decoding algebraic codes (BMS)","text":"An element in its kernel gives an error locator polynomial of degree 1:","category":"page"},{"location":"expl/6.Decoding/","page":"Decoding algebraic codes (BMS)","title":"Decoding algebraic codes (BMS)","text":"using LinearAlgebra\nle = nullspace(H); le/=le[3]\nple = (L1'*le)[1]","category":"page"},{"location":"expl/6.Decoding/","page":"Decoding algebraic codes (BMS)","title":"Decoding algebraic codes (BMS)","text":"0.5000000000000002x1 + x2 + 1.5","category":"page"},{"location":"expl/6.Decoding/","page":"Decoding algebraic codes (BMS)","title":"Decoding algebraic codes (BMS)","text":"We check for which point in P, this polynomial vanishes. This will give the position where an error occurs:","category":"page"},{"location":"expl/6.Decoding/","page":"Decoding algebraic codes (BMS)","title":"Decoding algebraic codes (BMS)","text":"er = le'*vcat(fill(1.,1,size(P,2)),P)","category":"page"},{"location":"expl/6.Decoding/","page":"Decoding algebraic codes (BMS)","title":"Decoding algebraic codes (BMS)","text":"1×8 Array{Float64,2}:\n 3.0  1.0  2.0  -2.22045e-16  2.5  1.5  4.0  0.0","category":"page"},{"location":"expl/6.Decoding/","page":"Decoding algebraic codes (BMS)","title":"Decoding algebraic codes (BMS)","text":"ie = []\nfor i in 1:length(er)\n    if isapprox(er[i],0.0;atol=1e-10) push!(ie, i) end\nend\nie","category":"page"},{"location":"expl/6.Decoding/","page":"Decoding algebraic codes (BMS)","title":"Decoding algebraic codes (BMS)","text":"2-element Array{Any,1}:\n 4\n 8","category":"page"},{"location":"expl/6.Decoding/","page":"Decoding algebraic codes (BMS)","title":"Decoding algebraic codes (BMS)","text":"These are the following points of P:","category":"page"},{"location":"expl/6.Decoding/","page":"Decoding algebraic codes (BMS)","title":"Decoding algebraic codes (BMS)","text":"E = ([P[j,ie[i]] for i in 1:length(ie), j in 1:size(P,1)])'","category":"page"},{"location":"expl/6.Decoding/","page":"Decoding algebraic codes (BMS)","title":"Decoding algebraic codes (BMS)","text":"2×2 Adjoint{Int64,Array{Int64,2}}:\n -1   1\n -1  -2","category":"page"},{"location":"expl/6.Decoding/","page":"Decoding algebraic codes (BMS)","title":"Decoding algebraic codes (BMS)","text":"To get the error, that is the weights, we solve the system: E*omega =sigma_x_1 sigma_x_2:","category":"page"},{"location":"expl/6.Decoding/","page":"Decoding algebraic codes (BMS)","title":"Decoding algebraic codes (BMS)","text":"cr = E\\(W*r)[2:3]","category":"page"},{"location":"expl/6.Decoding/","page":"Decoding algebraic codes (BMS)","title":"Decoding algebraic codes (BMS)","text":"2-element Array{Float64,1}:\n  1.0\n -1.0","category":"page"},{"location":"expl/6.Decoding/","page":"Decoding algebraic codes (BMS)","title":"Decoding algebraic codes (BMS)","text":"We can now correct the received message by removing the weights cr at the positions of the errors ie:","category":"page"},{"location":"expl/6.Decoding/","page":"Decoding algebraic codes (BMS)","title":"Decoding algebraic codes (BMS)","text":"c=copy(r)\nfor i in 1:length(ie) c[ie[i]]-= cr[i] end \nc","category":"page"},{"location":"expl/6.Decoding/","page":"Decoding algebraic codes (BMS)","title":"Decoding algebraic codes (BMS)","text":"8-element Array{Int64,1}:\n  3\n  3\n  3\n -1\n -6\n -2\n  0\n  0","category":"page"},{"location":"expl/6.Decoding/","page":"Decoding algebraic codes (BMS)","title":"Decoding algebraic codes (BMS)","text":"We check that the corrected message is a word of the code:","category":"page"},{"location":"expl/6.Decoding/","page":"Decoding algebraic codes (BMS)","title":"Decoding algebraic codes (BMS)","text":"W*c","category":"page"},{"location":"expl/6.Decoding/","page":"Decoding algebraic codes (BMS)","title":"Decoding algebraic codes (BMS)","text":"6-element Array{Float64,1}:\n 0.0\n 0.0\n 0.0\n 0.0\n 0.0\n 0.0","category":"page"},{"location":"expl/4.DiracMeasure/#Weighted-sum-of-Dirac-Measures","page":"Weighted sum of Dirac Measures","title":"Weighted sum of Dirac Measures","text":"","category":"section"},{"location":"expl/4.DiracMeasure/","page":"Weighted sum of Dirac Measures","title":"Weighted sum of Dirac Measures","text":"using MultivariateSeries","category":"page"},{"location":"expl/4.DiracMeasure/","page":"Weighted sum of Dirac Measures","title":"Weighted sum of Dirac Measures","text":"Series with 3 variables","category":"page"},{"location":"expl/4.DiracMeasure/","page":"Weighted sum of Dirac Measures","title":"Weighted sum of Dirac Measures","text":"x = @ring x1 x2 x3\nn = length(x)\nr = 4;","category":"page"},{"location":"expl/4.DiracMeasure/","page":"Weighted sum of Dirac Measures","title":"Weighted sum of Dirac Measures","text":"Random weights in 01","category":"page"},{"location":"expl/4.DiracMeasure/","page":"Weighted sum of Dirac Measures","title":"Weighted sum of Dirac Measures","text":"w0 = rand(Float64,r)","category":"page"},{"location":"expl/4.DiracMeasure/","page":"Weighted sum of Dirac Measures","title":"Weighted sum of Dirac Measures","text":"4-element Array{Float64,1}:\n 0.10310570990285539\n 0.659237146402671  \n 0.42854695858385483\n 0.9028954619877378","category":"page"},{"location":"expl/4.DiracMeasure/","page":"Weighted sum of Dirac Measures","title":"Weighted sum of Dirac Measures","text":"Random points in 01^n","category":"page"},{"location":"expl/4.DiracMeasure/","page":"Weighted sum of Dirac Measures","title":"Weighted sum of Dirac Measures","text":"Xi0 = rand(Float64,n,r)","category":"page"},{"location":"expl/4.DiracMeasure/","page":"Weighted sum of Dirac Measures","title":"Weighted sum of Dirac Measures","text":"3×4 Array{Float64,2}:\n 0.894353  0.723909  0.847517   0.243868\n 0.621765  0.474676  0.889351   0.234888\n 0.448695  0.324577  0.0910113  0.929199","category":"page"},{"location":"expl/4.DiracMeasure/","page":"Weighted sum of Dirac Measures","title":"Weighted sum of Dirac Measures","text":"Moment function of the sum of the Dirac measures of the points Xi_0 with weights omega_0 and its generating series up to degree 3.","category":"page"},{"location":"expl/4.DiracMeasure/","page":"Weighted sum of Dirac Measures","title":"Weighted sum of Dirac Measures","text":"mt = moment(w0, Xi0)\ns = series(mt, monoms(x, 3))","category":"page"},{"location":"expl/4.DiracMeasure/","page":"Weighted sum of Dirac Measures","title":"Weighted sum of Dirac Measures","text":"0.4339257411626396dx1*dx3 + 0.9702397337601841dx2 + 1.1382083719944895dx3 + 0.6585957641575078dx1*dx2 + 0.756553791183631dx3^3 + 0.14323371231850154dx2^2dx3 + 0.5978228622857406dx1^3 + 0.40844393047707755dx2^3 + 0.36208356970237654dx2*dx3 + 0.5016353149729792dx1^2dx2 + 0.17670723666808152dx1*dx2*dx3 + 0.7894555317442516dx1^2 + 0.8733277036829585dx3^2 + 1.1528284153895243dx1 + 0.5771697834203546dx2^2 + 0.22704558514092504dx1^2dx3 + 0.2619613422143817dx1*dx3^2 + 0.4425968864300194dx1*dx2^2 + 0.2321415223320108dx2*dx3^2 + 2.093785276877119","category":"page"},{"location":"expl/4.DiracMeasure/","page":"Weighted sum of Dirac Measures","title":"Weighted sum of Dirac Measures","text":"Decomposition of the series from its terms up to degree 3.","category":"page"},{"location":"expl/4.DiracMeasure/","page":"Weighted sum of Dirac Measures","title":"Weighted sum of Dirac Measures","text":"w, Xi = decompose(s);","category":"page"},{"location":"expl/4.DiracMeasure/","page":"Weighted sum of Dirac Measures","title":"Weighted sum of Dirac Measures","text":"w","category":"page"},{"location":"expl/4.DiracMeasure/","page":"Weighted sum of Dirac Measures","title":"Weighted sum of Dirac Measures","text":"4-element Array{Float64,1}:\n 0.4285469585838939 \n 0.10310570990277962\n 0.6592371464026707 \n 0.9028954619877747","category":"page"},{"location":"expl/4.DiracMeasure/","page":"Weighted sum of Dirac Measures","title":"Weighted sum of Dirac Measures","text":"Xi","category":"page"},{"location":"expl/4.DiracMeasure/","page":"Weighted sum of Dirac Measures","title":"Weighted sum of Dirac Measures","text":"3×4 Array{Float64,2}:\n 0.847517   0.894353  0.723909  0.243868\n 0.889351   0.621765  0.474676  0.234888\n 0.0910113  0.448695  0.324577  0.929199","category":"page"},{"location":"code/2.polynomials/#Polynomials","page":"Polynomials","title":"Polynomials","text":"","category":"section"},{"location":"code/2.polynomials/","page":"Polynomials","title":"Polynomials","text":"Pages = [\"2.polynomials.md\"]","category":"page"},{"location":"code/2.polynomials/","page":"Polynomials","title":"Polynomials","text":"@ring ","category":"page"},{"location":"code/2.polynomials/#MultivariateSeries.@ring","page":"Polynomials","title":"MultivariateSeries.@ring","text":"@ring args...\n\nDefines the arguments as variables and output their array.\n\nExample\n\nX = @ring x1 x2\n\n\n\n\n\n","category":"macro"},{"location":"code/2.polynomials/","page":"Polynomials","title":"Polynomials","text":"monoms","category":"page"},{"location":"code/2.polynomials/#MultivariateSeries.monoms","page":"Polynomials","title":"MultivariateSeries.monoms","text":"monoms(V, d::Int64) -> Vector{Monomial}\nmonoms(V, rg::UnitRangeInt64) -> Vector{Monomial}\n\nList of all monomials in the variables V up to degree d of from degree d1 to d2, ordered by increasing degree.\n\n\n\n\n\nmonoms(V, d::Int64) -> Vector{Monomial}\n\nList of all monomials in the variables V up to degree d of from degree d1 to d2, ordered by increasing degree.\n\n\n\n\n\n","category":"function"},{"location":"code/2.polynomials/","page":"Polynomials","title":"Polynomials","text":"inv","category":"page"},{"location":"code/2.polynomials/#Base.inv","page":"Polynomials","title":"Base.inv","text":" inv(m :: Monomial{true})\n\nreturn the inverse monomial with opposite exponents.\n\n\n\n\n\n inv(m :: Monomial)\n\nreturn the inverse monomial with opposite exponents.\n\n\n\n\n\n","category":"function"},{"location":"code/2.polynomials/","page":"Polynomials","title":"Polynomials","text":"exponent","category":"page"},{"location":"code/2.polynomials/#Base.Math.exponent","page":"Polynomials","title":"Base.Math.exponent","text":"exponent(m::Monomial) -> Array{Int64,1}\n\nGet the exponent of a monomial as an array of Int64\n\n\n\n\n\n","category":"function"},{"location":"code/2.polynomials/","page":"Polynomials","title":"Polynomials","text":"deg","category":"page"},{"location":"code/2.polynomials/#MultivariateSeries.deg","page":"Polynomials","title":"MultivariateSeries.deg","text":"deg(p:Polynomial) -> Int64\n\nDegree of a polynomial\n\n\n\n\n\n","category":"function"},{"location":"code/2.polynomials/","page":"Polynomials","title":"Polynomials","text":"sparse_pol","category":"page"},{"location":"code/2.polynomials/#MultivariateSeries.sparse_pol","page":"Polynomials","title":"MultivariateSeries.sparse_pol","text":"sparse_pol(w, E, X) -> Polynomial{true,C}\n\nCompute the polynomial  ωᵢ X^Ei with coefficients ωᵢ and monomial exponents Ei.\n\n\n\n\n\n","category":"function"},{"location":"expl/3.MultivariateProny/#Multivariate-exponential-decompositon","page":"Multivariate exponential decompositon","title":"Multivariate exponential decompositon","text":"","category":"section"},{"location":"expl/3.MultivariateProny/","page":"Multivariate exponential decompositon","title":"Multivariate exponential decompositon","text":"using MultivariateSeries","category":"page"},{"location":"expl/3.MultivariateProny/","page":"Multivariate exponential decompositon","title":"Multivariate exponential decompositon","text":"We consider the following function, which is a sum of 6 complex exponentials ","category":"page"},{"location":"expl/3.MultivariateProny/","page":"Multivariate exponential decompositon","title":"Multivariate exponential decompositon","text":"f = (u,v) -> 0.5*cos(0.7*pi*(u+v))+0.6*sin(4*pi*u)-0.2*cos(pi*v);","category":"page"},{"location":"expl/3.MultivariateProny/","page":"Multivariate exponential decompositon","title":"Multivariate exponential decompositon","text":"(Image: waves)","category":"page"},{"location":"expl/3.MultivariateProny/","page":"Multivariate exponential decompositon","title":"Multivariate exponential decompositon","text":"In order to recover the frequencies or exponents of these exponential terms and their coefficients, we sample the function on a grid (alpha_1 over T alpha_2 over T) alpha=(alpha_1alpha_2)in Asubset mathbbN^2. This defines a sequence of moments sigma_alpha=f(alpha_1 over T alpha_2 over T). We compute its generating series truncated in degree leq 5.","category":"page"},{"location":"expl/3.MultivariateProny/","page":"Multivariate exponential decompositon","title":"Multivariate exponential decompositon","text":"X = @ring x1 x2\nL = monoms(X,5)\nT = 10\nmnt = (V->f(V[1]/T,V[2]/T))\nsigma = series(mnt, L)","category":"page"},{"location":"expl/3.MultivariateProny/","page":"Multivariate exponential decompositon","title":"Multivariate exponential decompositon","text":"0.2569085959993554dx2^4 - 0.22417045976016967dx1^3dx2 + 0.7358257607718759dx1*dx2^4 + 0.8585922907464658dx1 + 0.5575373543042985dx1^2dx2 + 0.46210935078676274dx1^2dx2^3 + 0.6050846776084937dx1^2 + 0.02699524986977328dx1^5 - 0.15759364518763863dx1^3 + 0.2775204557293506dx2^3 + 0.29774707771034303dx2 - 0.2874793003806999dx1^3dx2^2 + 0.5095797473748392dx1^2dx2^2 + 0.2906101273580203dx2^2 + 0.7717888541929423dx1*dx2^3 + 0.22699524986977343dx2^5 - 0.5338499631663495dx1^4dx2 + 0.8328361327510712dx1*dx2 + 0.8039080170899477dx1*dx2^2 - 0.4519219149027473dx1^4 + 0.3","category":"page"},{"location":"expl/3.MultivariateProny/","page":"Multivariate exponential decompositon","title":"Multivariate exponential decompositon","text":"Computing its decomposition using svd","category":"page"},{"location":"expl/3.MultivariateProny/","page":"Multivariate exponential decompositon","title":"Multivariate exponential decompositon","text":"w, Xi = decompose(sigma);","category":"page"},{"location":"expl/3.MultivariateProny/","page":"Multivariate exponential decompositon","title":"Multivariate exponential decompositon","text":"yields the weights omega of the exponential terms in f and the exponentials Xi:","category":"page"},{"location":"expl/3.MultivariateProny/","page":"Multivariate exponential decompositon","title":"Multivariate exponential decompositon","text":"log.(Xi')*T/pi","category":"page"},{"location":"expl/3.MultivariateProny/","page":"Multivariate exponential decompositon","title":"Multivariate exponential decompositon","text":"6×2 Array{Complex{Float64},2}:\n 6.84243e-12+1.89601e-12im  -1.46851e-12-1.0im        \n 6.84243e-12-1.89601e-12im  -1.46851e-12+1.0im        \n 1.88616e-12-0.7im           4.84085e-13-0.7im        \n 1.88616e-12+0.7im           4.84085e-13+0.7im        \n 8.94708e-13-4.0im          -2.79182e-13+8.46664e-15im\n 8.94708e-13+4.0im          -2.79182e-13-8.46664e-15im","category":"page"},{"location":"expl/3.MultivariateProny/","page":"Multivariate exponential decompositon","title":"Multivariate exponential decompositon","text":"By taking the log and scaling by Tover pi, we recover the frequency vectors within precision 1O^-11. ","category":"page"},{"location":"expl/3.MultivariateProny/","page":"Multivariate exponential decompositon","title":"Multivariate exponential decompositon","text":"w","category":"page"},{"location":"expl/3.MultivariateProny/","page":"Multivariate exponential decompositon","title":"Multivariate exponential decompositon","text":"6-element Array{Complex{Float64},1}:\n  0.08650714237109196 + 0.05016487136224489im\n  0.08650714237109196 - 0.05016487136224486im\n -0.17203277153436108 - 0.18139659731722088im\n  -0.1720327715343611 + 0.18139659731722083im\n -0.16999220553356456 - 0.24718950232123527im\n -0.16999220553356453 + 0.2471895023212353im","category":"page"},{"location":"code/1.series/#Series","page":"Series","title":"Series","text":"","category":"section"},{"location":"code/1.series/","page":"Series","title":"Series","text":"Pages = [\"1.series.md\"]","category":"page"},{"location":"code/1.series/","page":"Series","title":"Series","text":"MultivariateSeries.Series","category":"page"},{"location":"code/1.series/#MultivariateSeries.Series","page":"Series","title":"MultivariateSeries.Series","text":"Series{C,M}\n\nClass representing multivariate series. The series is a dictionary, which associates values of type C to monomials of type M.\n\n\n\n\n\n","category":"type"},{"location":"code/1.series/","page":"Series","title":"Series","text":"dual","category":"page"},{"location":"code/1.series/#MultivariateSeries.dual","page":"Series","title":"MultivariateSeries.dual","text":"dual(p::Polynomial) -> Series{C,M}\n\nCompute the series associated to the polynomial p, replacing the variables xi by their dual variables dxi. C is the type of coefficients  of the polynomial p and M its type of monomials.\n\n\n\n\n\n","category":"function"},{"location":"code/1.series/","page":"Series","title":"Series","text":"LinearAlgebra.dot ","category":"page"},{"location":"code/1.series/#LinearAlgebra.dot","page":"Series","title":"LinearAlgebra.dot","text":"dot(σ::Series{C,M}, p::Variable) -> C\ndot(σ::Series{C,M}, p::Monomial) -> C\ndot(σ::Series{C,M}, p::Term) -> C\ndot(σ::Series{C,M}, p::Polynomial) -> C\ndot(σ::Series{C,M}, p::Polynomial, q::Polynomial) -> C\n\nCompute the dot product  p q _σ =  σ  p q  or   σ  p  for p, q polynomials, terms or monomials. Apply the linear functional sigma on monomials, terms, polynomials\n\n\n\n\n\n","category":"function"},{"location":"code/1.series/","page":"Series","title":"Series","text":"moment","category":"page"},{"location":"code/1.series/#MultivariateSeries.moment","page":"Series","title":"MultivariateSeries.moment","text":"moment(w::Vector{C}, P::Matrix{C}) -> Vector{Int64} -> C\n\nCompute the moment function α - _i ω_i P_i^α associated to the sequence P of r points of dimension n, which is a matrix of size r*n and the weights w.\n\n\n\n\n\nmoment(p::Polynomial, zeta::Vector{C}) -> Vector{Int64} -> C\n\nCompute the moment function α rightarrow p(ζ^α).\n\n\n\n\n\n","category":"function"},{"location":"code/1.series/","page":"Series","title":"Series","text":"series ","category":"page"},{"location":"code/1.series/#MultivariateSeries.series","page":"Series","title":"MultivariateSeries.series","text":"Construct the series with the term (c,m).\n\n\n\n\n\nConstruct the series from an array of pairs  m=>c where m is a monomial and c the associate coefficient.\n\n\n\n\n\nseries(f::Function, L::Vector{M}) -> Series{C,M}\n\nCompute the generating series sum_x^α in L f(α) z^α for a function  f mathbbN^n rightarrow C and a sequence L of monomials.\n\n\n\n\n\nseries(w:: Vector{C}, P::Matrix{C}, L::Vector{M}) -> Series{C,M}\n\nCompute the series of the moment sequence _i ω_i P_i^α for α in L.\n\n\n\n\n\nseries(w:: Vector{C}, P::AbstractMatrix, X, d::Int64) -> Series{C,M}\n\nCompute the series of the moment sequence _i ω_i P_i^α for α leq d.\n\n\n\n\n\nseries(p::Polynomial, zeta, X, d::Int64) -> Series\n\nCompute the series of moments p(ζ^α) for α leq d.\n\n\n\n\n\nseries(H::Matrix{C}, L1::Vector{M}, L2::Vector{M}) -> Series{C,M}\n\nCompute the series associated to the Hankel matrix H, with rows (resp. columns) indexed by the array of monomials L1 (resp. L2).\n\n\n\n\n\n","category":"function"},{"location":"code/1.series/","page":"Series","title":"Series","text":"scale","category":"page"},{"location":"code/1.series/#MultivariateSeries.scale","page":"Series","title":"MultivariateSeries.scale","text":"Scale the moments σ_α by λ^deg(α).\n\n\n\n\n\n","category":"function"},{"location":"code/1.series/","page":"Series","title":"Series","text":"scale!","category":"page"},{"location":"code/1.series/#MultivariateSeries.scale!","page":"Series","title":"MultivariateSeries.scale!","text":"Scale the moments σ_α by λ^deg(α), overwriting σ\n\n\n\n\n\n","category":"function"},{"location":"code/1.series/","page":"Series","title":"Series","text":"*","category":"page"},{"location":"code/1.series/#Base.:*","page":"Series","title":"Base.:*","text":"Multiply the elements of L by the variable v\n\n\n\n\n\n *(v::Variable,   σ::Series{C,M}) -> Series{C,M}\n *(m::Monomial,   σ::Series{C,M}) -> Series{C,M}\n *(t::Term,       σ::Series{C,M}) -> Series{C,M}\n *(p::Polynomial, σ::Series{C,M}) -> Series{C,M}\n\nThe dual product (or co-product) where variables are inverted in the polynomial and the monomials with positive exponents are kept in the series.\n\n\n\n\n\n","category":"function"},{"location":"code/1.series/","page":"Series","title":"Series","text":"maxdegree","category":"page"},{"location":"code/1.series/#MultivariatePolynomials.maxdegree","page":"Series","title":"MultivariatePolynomials.maxdegree","text":"maxdegree(σ::Series) -> Int64\n\nMaximal degree of the moments defined in the series σ.\n\n\n\n\n\n","category":"function"},{"location":"code/1.series/","page":"Series","title":"Series","text":"hankel ","category":"page"},{"location":"code/1.series/#MultivariateSeries.hankel","page":"Series","title":"MultivariateSeries.hankel","text":"hankel(σ::Series{C,M}, L1::Vector{M}, L2::Vector{M}) -> Array{C,2}\n\nHankel matrix of σ with the rows indexed by the list of polynomials L1 and the columns by L2. The entries are the dot product for σ of the corresponding elements in L1 and L2.\n\nExample\n\njulia> L =[1, x1, x2, x1^2, x1*x2, x2^2]\n\njulia> H = hankel(s,L,L)\n6x6 Array{Float64,2}:\n  4.0   5.0   7.0    5.0  11.0  13.0\n  5.0   5.0  11.0   -1.0  17.0  23.0\n  7.0  11.0  13.0   17.0  23.0  25.0\n  5.0  -1.0  17.0  -31.0  23.0  41.0\n 11.0  17.0  23.0   23.0  41.0  47.0\n 13.0  23.0  25.0   41.0  47.0  49.0\n\n\n\n\n\n","category":"function"},{"location":"code/1.series/","page":"Series","title":"Series","text":"hankelbasis","category":"page"},{"location":"code/1.series/#MultivariateSeries.hankelbasis","page":"Series","title":"MultivariateSeries.hankelbasis","text":"Generate the table of Hankel matrices H_α associated to the monomials x^α generating the space of Hankel matrices indexed by L1 (for the rows) and L2 (for the columns).\n\n\n\n\n\n","category":"function"},{"location":"expl/0.Decomposition/#Decomposition-algorithm","page":"Decomposition algorithm","title":"Decomposition algorithm","text":"","category":"section"},{"location":"expl/0.Decomposition/","page":"Decomposition algorithm","title":"Decomposition algorithm","text":"using MultivariateSeries\nusing LinearAlgebra\nX = @ring x1 x2 x3","category":"page"},{"location":"expl/0.Decomposition/","page":"Decomposition algorithm","title":"Decomposition algorithm","text":"3-element Array{DynamicPolynomials.PolyVar{true},1}:\n x1\n x2\n x3","category":"page"},{"location":"expl/0.Decomposition/","page":"Decomposition algorithm","title":"Decomposition algorithm","text":"We want to find a sparse representation of the following series known up to degree 3:","category":"page"},{"location":"expl/0.Decomposition/","page":"Decomposition algorithm","title":"Decomposition algorithm","text":"sigma = dual(6.0 + 4.0*x1 + 15.0*x2 + 6.0*x3 + 6.0*x1^2 + 20.0*x1*x2 + 4.0*x1*x3 + 43.0*x2^2 + 15.0*x2*x3 + 6.0*x3^2 - 26.0*x1^3 + 30.0*x1^2*x2 + 6.0*x1^2*x3 + 72.0*x1*x2^2 + 20.0*x1*x2*x3 + 4.0*x1*x3^2 + 129.0*x2^3 + 43.0*x2^2*x3 + 15.0*x2*x3^2 + 6.0*x3^3)","category":"page"},{"location":"expl/0.Decomposition/","page":"Decomposition algorithm","title":"Decomposition algorithm","text":"4.0dx1*dx3 + 15.0dx2 + 6.0dx3 + 20.0dx1*dx2 + 6.0dx3^3 + 43.0dx2^2dx3 - 26.0dx1^3 + 129.0dx2^3 + 30.0dx1^2dx2 + 15.0dx2*dx3 + 20.0dx1*dx2*dx3 + 6.0dx1^2 + 6.0dx3^2 + 4.0dx1 + 43.0dx2^2 + 6.0dx1^2dx3 + 4.0dx1*dx3^2 + 72.0dx1*dx2^2 + 15.0dx2*dx3^2 + 6.0","category":"page"},{"location":"expl/0.Decomposition/","page":"Decomposition algorithm","title":"Decomposition algorithm","text":"L1 = monoms(X,1)\nL2 = monoms(X,2)","category":"page"},{"location":"expl/0.Decomposition/","page":"Decomposition algorithm","title":"Decomposition algorithm","text":"10-element Array{DynamicPolynomials.Monomial{true},1}:\n 1   \n x1  \n x2  \n x3  \n x1² \n x1x2\n x1x3\n x2² \n x2x3\n x3²","category":"page"},{"location":"expl/0.Decomposition/","page":"Decomposition algorithm","title":"Decomposition algorithm","text":"H = hankel(sigma,L1,L2)","category":"page"},{"location":"expl/0.Decomposition/","page":"Decomposition algorithm","title":"Decomposition algorithm","text":"4×10 Array{Float64,2}:\n  6.0   4.0  15.0   6.0    6.0  20.0   4.0   43.0  15.0   6.0\n  4.0   6.0  20.0   4.0  -26.0  30.0   6.0   72.0  20.0   4.0\n 15.0  20.0  43.0  15.0   30.0  72.0  20.0  129.0  43.0  15.0\n  6.0   4.0  15.0   6.0    6.0  20.0   4.0   43.0  15.0   6.0","category":"page"},{"location":"expl/0.Decomposition/","page":"Decomposition algorithm","title":"Decomposition algorithm","text":"The rank of H_sigma will give us an idea on the dimension of mathcalA_sigma.","category":"page"},{"location":"expl/0.Decomposition/","page":"Decomposition algorithm","title":"Decomposition algorithm","text":"rank(H)","category":"page"},{"location":"expl/0.Decomposition/","page":"Decomposition algorithm","title":"Decomposition algorithm","text":"3","category":"page"},{"location":"expl/0.Decomposition/","page":"Decomposition algorithm","title":"Decomposition algorithm","text":"We check that 1 x_1 x_2 is a basis of mathcalA_sigma: ","category":"page"},{"location":"expl/0.Decomposition/","page":"Decomposition algorithm","title":"Decomposition algorithm","text":"B0 = L1[1:3]","category":"page"},{"location":"expl/0.Decomposition/","page":"Decomposition algorithm","title":"Decomposition algorithm","text":"3-element Array{DynamicPolynomials.Monomial{true},1}:\n 1 \n x1\n x2","category":"page"},{"location":"expl/0.Decomposition/","page":"Decomposition algorithm","title":"Decomposition algorithm","text":"H0 = hankel(sigma, B0, B0)","category":"page"},{"location":"expl/0.Decomposition/","page":"Decomposition algorithm","title":"Decomposition algorithm","text":"3×3 Array{Float64,2}:\n  6.0   4.0  15.0\n  4.0   6.0  20.0\n 15.0  20.0  43.0","category":"page"},{"location":"expl/0.Decomposition/","page":"Decomposition algorithm","title":"Decomposition algorithm","text":"rank(H0)","category":"page"},{"location":"expl/0.Decomposition/","page":"Decomposition algorithm","title":"Decomposition algorithm","text":"3","category":"page"},{"location":"expl/0.Decomposition/","page":"Decomposition algorithm","title":"Decomposition algorithm","text":"Let us compute the shifted (truncated) Hankel operators.","category":"page"},{"location":"expl/0.Decomposition/","page":"Decomposition algorithm","title":"Decomposition algorithm","text":"H1 = hankel(sigma, B0, B0*x1)\nH2 = hankel(sigma, B0, B0*x2)\nH3 = hankel(sigma, B0, B0*x3);\nH  = [H1,H2,H3]\nH[1]","category":"page"},{"location":"expl/0.Decomposition/","page":"Decomposition algorithm","title":"Decomposition algorithm","text":"3×3 Array{Float64,2}:\n  4.0    6.0  20.0\n  6.0  -26.0  30.0\n 20.0   30.0  72.0","category":"page"},{"location":"expl/0.Decomposition/","page":"Decomposition algorithm","title":"Decomposition algorithm","text":"M = [ H0^(-1)*H[i] for i in 1:3 ]\nM[1]","category":"page"},{"location":"expl/0.Decomposition/","page":"Decomposition algorithm","title":"Decomposition algorithm","text":"3×3 Array{Float64,2}:\n  1.11022e-16   9.14286  -0.571429\n  1.0           3.85714   1.57143 \n -1.11022e-16  -4.28571   1.14286","category":"page"},{"location":"expl/0.Decomposition/","page":"Decomposition algorithm","title":"Decomposition algorithm","text":"The eigenvalues and eigenvectors of M_x_1 are","category":"page"},{"location":"expl/0.Decomposition/","page":"Decomposition algorithm","title":"Decomposition algorithm","text":"We deduce the operators of multiplication by the variables in the basis B_0:","category":"page"},{"location":"expl/0.Decomposition/","page":"Decomposition algorithm","title":"Decomposition algorithm","text":"v, E = eigen(M[1])","category":"page"},{"location":"expl/0.Decomposition/","page":"Decomposition algorithm","title":"Decomposition algorithm","text":"Eigen{Float64,Float64,Array{Float64,2},Array{Float64,1}}\neigenvalues:\n3-element Array{Float64,1}:\n -0.9999999999999991\n  4.000000000000002 \n  2.000000000000002 \neigenvectors:\n3×3 Array{Float64,2}:\n  0.963087  -0.811107  -0.762001\n -0.120386  -0.324443  -0.127   \n -0.240772   0.486664   0.635001","category":"page"},{"location":"expl/0.Decomposition/","page":"Decomposition algorithm","title":"Decomposition algorithm","text":"The matrices M_x_i are diagonal in this basis:","category":"page"},{"location":"expl/0.Decomposition/","page":"Decomposition algorithm","title":"Decomposition algorithm","text":"D = [E^(-1)*M[i]*E for i in 1:3]\nD[1]","category":"page"},{"location":"expl/0.Decomposition/","page":"Decomposition algorithm","title":"Decomposition algorithm","text":"3×3 Array{Float64,2}:\n -1.0          -6.99441e-15  -3.66374e-15\n  4.21885e-15   4.0          -4.44089e-15\n -4.66294e-15  -3.9968e-15    2.0","category":"page"},{"location":"expl/0.Decomposition/","page":"Decomposition algorithm","title":"Decomposition algorithm","text":"D[2]","category":"page"},{"location":"expl/0.Decomposition/","page":"Decomposition algorithm","title":"Decomposition algorithm","text":"3×3 Array{Float64,2}:\n  1.0          -4.44089e-16  -1.44329e-15\n  8.88178e-16   2.0           2.66454e-15\n -3.55271e-15   2.66454e-15   3.0","category":"page"},{"location":"expl/0.Decomposition/","page":"Decomposition algorithm","title":"Decomposition algorithm","text":"D[3]","category":"page"},{"location":"expl/0.Decomposition/","page":"Decomposition algorithm","title":"Decomposition algorithm","text":"3×3 Array{Float64,2}:\n  1.0           3.33067e-16  1.11022e-16\n -9.4369e-16    1.0          6.66134e-16\n  5.55112e-16  -6.66134e-16  1.0","category":"page"},{"location":"expl/0.Decomposition/","page":"Decomposition algorithm","title":"Decomposition algorithm","text":"Looking at the corresponding terms on the diagonal, we get the coordinates of the points Xi:","category":"page"},{"location":"expl/0.Decomposition/","page":"Decomposition algorithm","title":"Decomposition algorithm","text":"Xi = [ D[i][j,j] for i in 1:3, j in 1:3]","category":"page"},{"location":"expl/0.Decomposition/","page":"Decomposition algorithm","title":"Decomposition algorithm","text":"3×3 Array{Float64,2}:\n -1.0  4.0  2.0\n  1.0  2.0  3.0\n  1.0  1.0  1.0","category":"page"},{"location":"expl/0.Decomposition/","page":"Decomposition algorithm","title":"Decomposition algorithm","text":"We normalize the eigenvectors by v_i over v_i(xi_i) and get the interpolation polynomials at the points xi_i:","category":"page"},{"location":"expl/0.Decomposition/","page":"Decomposition algorithm","title":"Decomposition algorithm","text":"Dg = E'*vcat(fill(1.,1,3), Xi[1:2,:])\nE = E*Dg^(-1)\nU = E'*B0","category":"page"},{"location":"expl/0.Decomposition/","page":"Decomposition algorithm","title":"Decomposition algorithm","text":"3-element Array{DynamicPolynomials.Polynomial{true,Float64},1}:\n -0.14285714285714324x1 - 0.2857142857142862x2 + 1.142857142857143 \n 0.28571428571428614x1 - 0.4285714285714279x2 + 0.7142857142857121 \n -0.14285714285714332x1 + 0.7142857142857134x2 - 0.8571428571428543","category":"page"},{"location":"expl/0.Decomposition/","page":"Decomposition algorithm","title":"Decomposition algorithm","text":"We deduce the weights w_i=sigma(u_i):","category":"page"},{"location":"expl/0.Decomposition/","page":"Decomposition algorithm","title":"Decomposition algorithm","text":"w = hankel(sigma, U, [L1[1]])","category":"page"},{"location":"expl/0.Decomposition/","page":"Decomposition algorithm","title":"Decomposition algorithm","text":"3×1 Array{Float64,2}:\n  1.999999999999992 \n -1.0000000000000018\n  5.000000000000002","category":"page"},{"location":"expl/0.Decomposition/","page":"Decomposition algorithm","title":"Decomposition algorithm","text":"Using the command decompose, we can get directly the same decomposition: ","category":"page"},{"location":"expl/0.Decomposition/","page":"Decomposition algorithm","title":"Decomposition algorithm","text":"w, Xi = decompose(sigma)","category":"page"},{"location":"expl/0.Decomposition/","page":"Decomposition algorithm","title":"Decomposition algorithm","text":"([-1.0, 5.0, 2.0], [4.0 2.0 -1.0; 2.0 3.0 1.0; 1.0 1.0 1.0])","category":"page"},{"location":"expl/0.Decomposition/","page":"Decomposition algorithm","title":"Decomposition algorithm","text":"Xi","category":"page"},{"location":"expl/0.Decomposition/","page":"Decomposition algorithm","title":"Decomposition algorithm","text":"3×3 Array{Float64,2}:\n 4.0  2.0  -1.0\n 2.0  3.0   1.0\n 1.0  1.0   1.0","category":"page"},{"location":"expl/0.Decomposition/","page":"Decomposition algorithm","title":"Decomposition algorithm","text":"w","category":"page"},{"location":"expl/0.Decomposition/","page":"Decomposition algorithm","title":"Decomposition algorithm","text":"3-element Array{Float64,1}:\n -1.0000000000000129\n  5.000000000000011 \n  1.9999999999999998","category":"page"},{"location":"expl/0.Decomposition/","page":"Decomposition algorithm","title":"Decomposition algorithm","text":"The series decomposes as 2 mathfrake_(-111) + 5 mathfrake_(231) - mathfrake_(421).","category":"page"},{"location":"#MultivariateSeries","page":"Home","title":"MultivariateSeries","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Package for the decomposition of tensors and polynomial-exponential series.","category":"page"},{"location":"#Introduction","page":"Home","title":"Introduction","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The package MultivariateSeries.jl provides tools for the manipulation of sequences (sigma_alpha)_alpha in mathbbK^mathbbN^n indexed by multivariate indices alpha in mathbbN^n which are represented as series: ","category":"page"},{"location":"","page":"Home","title":"Home","text":"     sigma(mathbfz) = sum_alpha in mathbbN^n sigma_alpha mathbfz^alpha","category":"page"},{"location":"","page":"Home","title":"Home","text":"Sometimes it is preferrable to associate the following series in mathbfy to the sequence sigma:","category":"page"},{"location":"","page":"Home","title":"Home","text":"sigma(mathbfy) = sum_alpha in mathbbN^n sigma_alpha fracmathbfy^alphaalpha","category":"page"},{"location":"","page":"Home","title":"Home","text":"The sequence sigma or the series sigma(z) represents a linear functional on the polynomials:","category":"page"},{"location":"","page":"Home","title":"Home","text":"     sigma p= sum_alpha in mathbbN^n p_alpha mathbfx^alpha mapsto sum_alpha in mathbbN^n p_alpha sigma_alpha","category":"page"},{"location":"","page":"Home","title":"Home","text":"The series are represented as association tables (or dictionnary) between (a finite set of) monomials and coefficients. They are printed using dual variables dxi:","category":"page"},{"location":"","page":"Home","title":"Home","text":"using MultivariateSeries\nX = @ring x1 x2\n\njulia> p = (1+x1)^3 + 0.5*(1+x1+x2)^2\nx1³ + 3.5x1² + x1x2 + 0.5x2² + 4.0x1 + x2 + 1.5\n\njulia> sigma = dual(p)\ndx1^3 + 1.5 + 3.5dx1^2 + 4.0dx1 + dx2 + dx1*dx2 + 0.5dx2^2","category":"page"},{"location":"","page":"Home","title":"Home","text":"Since the series is represented by a table, the order in which the dual monomials are printed is the order used in the table. It is not necessarily sorted by a monomial ordering.","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> sigma.terms\nDict{Monomial{true},Float64} with 7 entries:\n   x1³  => 1.0\n   1    => 1.5\n   x1²  => 3.5\n   x1   => 4.0\n   x2   => 1.0\n   x1x2 => 1.0\n   x2²  => 0.5","category":"page"},{"location":"","page":"Home","title":"Home","text":"Series act as linear functionals on polynomials via the dot product:","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> dot(sigma,x1^2)\n3.5\njulia> dot(sigma,x2^4)\n0.0","category":"page"},{"location":"#Polynomial-exponential-decomposition","page":"Home","title":"Polynomial-exponential decomposition","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The package provide tools for solving the following decomposition problem:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Given (the first terms of) sequence sigma in mathbbK^mathbbN^n or the series  sigma(mathbfy) in mathbbKmathbfy, we want to decompose it as polynomial-exponential series ","category":"page"},{"location":"","page":"Home","title":"Home","text":"sigma(mathbfy) = sum_i=1^r omega_i(mathbfy) e^xi_i1 y_1+ cdots + xi_in y_n","category":"page"},{"location":"","page":"Home","title":"Home","text":"with polynomials omega_i(mathbfy) and points xi_i= (xi_i1 ldots xi_in)in mathbbK^n.  omega_i are called the weights and  xi_i the frequencies of the decomposition.","category":"page"},{"location":"","page":"Home","title":"Home","text":"These types of decompositions appear in many problems (see Examples). ","category":"page"},{"location":"","page":"Home","title":"Home","text":"The package MultivariateSeries provides functions to manipulate (truncated) series, to construct truncated Hankel matrices, and to compute such a decomposition from these Hankel matrices.","category":"page"},{"location":"#sec_examples","page":"Home","title":"Examples","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages = map(file -> joinpath(\"expl\", file), filter(x ->endswith(x, \"md\"), readdir(\"expl\")))","category":"page"},{"location":"#Functions-and-types","page":"Home","title":"Functions and types","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages = map(file -> joinpath(\"code\", file), filter(x ->endswith(x, \"md\"), readdir(\"code\"))) ","category":"page"},{"location":"#sec_installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The package is available at https://github.com/bmourrain/MultivariateSeries.jl.git","category":"page"},{"location":"","page":"Home","title":"Home","text":"To install it from Julia:","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Pkg\nPkg.clone(\"https://github.com/bmourrain/MultivariateSeries.jl.git\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"It can then be used as follows:","category":"page"},{"location":"","page":"Home","title":"Home","text":"using MultivariateSeries","category":"page"},{"location":"","page":"Home","title":"Home","text":"See the Examples for more details.","category":"page"},{"location":"#Dependencies","page":"Home","title":"Dependencies","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The package MultivariateSeries depends on the following packages:","category":"page"},{"location":"","page":"Home","title":"Home","text":"DynamicPolynomials package on multivariate polynomials represented as lists of monomials.\nMultivariatePolynomials generic interface package for multivariate polynomials.","category":"page"},{"location":"","page":"Home","title":"Home","text":"These packages will be installed with MultivariateSeries  (see installation).","category":"page"},{"location":"expl/5.SparseInterpolation/#Sparse-interpolation","page":"Sparse interpolation","title":"Sparse interpolation","text":"","category":"section"},{"location":"expl/5.SparseInterpolation/","page":"Sparse interpolation","title":"Sparse interpolation","text":"using MultivariateSeries","category":"page"},{"location":"expl/5.SparseInterpolation/","page":"Sparse interpolation","title":"Sparse interpolation","text":"A sparse polynomial in 3 variables","category":"page"},{"location":"expl/5.SparseInterpolation/","page":"Sparse interpolation","title":"Sparse interpolation","text":"X = @ring x1 x2 x3\nf = 6.7x1^4*x2^5*x3 + 10.2x1^2*x2*x3^3 - 3.4x1*x2^2*x3","category":"page"},{"location":"expl/5.SparseInterpolation/","page":"Sparse interpolation","title":"Sparse interpolation","text":"6.7x1^{4}x2^{5}x3 + 10.2x1^{2}x2x3^{3} - 3.4x1x2^{2}x3","category":"page"},{"location":"expl/5.SparseInterpolation/","page":"Sparse interpolation","title":"Sparse interpolation","text":"The series of moments f(zeta^alpha) for alphaleq 3.","category":"page"},{"location":"expl/5.SparseInterpolation/","page":"Sparse interpolation","title":"Sparse interpolation","text":"zeta = fill(0.9, length(X))\nsigma = series(f, zeta, X,3)","category":"page"},{"location":"expl/5.SparseInterpolation/","page":"Sparse interpolation","title":"Sparse interpolation","text":"7.2252810000000025dx1*dx3 + 10.382283000000001dx2 + 10.405800000000001dx3 + 7.5529172763000005dx1*dx2 + 6.357388987800002dx3^3 + 6.117862993803001dx2^2dx3 + 4.834376094422702dx1^3 + 7.008371185034148dx2^3 + 7.774274700000001dx2*dx3 + 5.495308104980432dx1^2dx2 + 5.5261037486700015dx1*dx2*dx3 + 6.8223503070000024dx1^2 + 8.0936982dx3^2 + 9.59787dx1 + 8.36740554867dx2^2 + 4.995745656300002dx1^2dx3 + 5.472820242000001dx1*dx3^2 + 6.217299094482389dx1*dx2^2 + 5.852477610000002dx2*dx3^2 + 13.499999999999998","category":"page"},{"location":"expl/5.SparseInterpolation/","page":"Sparse interpolation","title":"Sparse interpolation","text":"Computing its decomposition using svd","category":"page"},{"location":"expl/5.SparseInterpolation/","page":"Sparse interpolation","title":"Sparse interpolation","text":"w, Xi = decompose(sigma);","category":"page"},{"location":"expl/5.SparseInterpolation/","page":"Sparse interpolation","title":"Sparse interpolation","text":"yields the coefficients of the terms of f as the weights omega, and the exponents of the monomials of f as the log_zeta of the points Xi:","category":"page"},{"location":"expl/5.SparseInterpolation/","page":"Sparse interpolation","title":"Sparse interpolation","text":"w","category":"page"},{"location":"expl/5.SparseInterpolation/","page":"Sparse interpolation","title":"Sparse interpolation","text":"3-element Array{Float64,1}:\n -3.399999999998614\n 10.199999999997454\n  6.700000000001163","category":"page"},{"location":"expl/5.SparseInterpolation/","page":"Sparse interpolation","title":"Sparse interpolation","text":"Ex = log(Xi, zeta)","category":"page"},{"location":"expl/5.SparseInterpolation/","page":"Sparse interpolation","title":"Sparse interpolation","text":"3×3 Array{Float64,2}:\n 1.0  2.0  4.0\n 2.0  1.0  5.0\n 1.0  3.0  1.0","category":"page"}]
}
